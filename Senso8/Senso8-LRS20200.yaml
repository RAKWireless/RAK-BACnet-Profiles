codec: >
  function Decode(fPort, data, variables) {
    var values = [];
    var array = new Uint8Array(data)
    var view = new DataView(array.buffer)

    if (fPort == 10) {
      var Temperature = view.getInt16(3, false);
      var Battery = data[2];
      var ButtonPressed = data[1] & 0x01
      var LowTemperatureAlarm = (data[1] >> 3) & 0x01
      var HighTemperatureAlarm = (data[1] >> 2) & 0x01
      values.push({ name: "Temperature", channel: 1, value: Temperature / 10.0, unit: "Â°C" })
      values.push({ name: "Battery", channel: 2, value: Battery, unit: "%" })
      values.push({ name: "LowTemperatureAlarm", channel: 3, value: LowTemperatureAlarm, unit: null })
      values.push({ name: "HighTemperatureAlarm", channel: 4, value: HighTemperatureAlarm, unit: null })
      values.push({ name: "ButtonPressed", channel: 5, value: ButtonPressed, unit: null })
    }

    return values
  }

  function Encode(data, variables) {
    var bytes = []
    return bytes
  }

  function decodeUplink(input) {
    return {
      data: Decode(input.fPort, input.bytes, input.variables)
    }
  }

  function encodeDownlink(input) {
    return {
      bytes: Encode(input.data, input.variables)
    }
  }
datatype:
  '1':
    covIncrement: 0.5
    name: Temperature
    type: AnalogInputObject
    units: degreesCelsius
    updateInterval: 600
  '2':
    covIncrement: 1.0
    name: Battery
    type: AnalogInputObject
    units: percent
    updateInterval: 600
  '3':
    name: Low Temperature Alert
    type: BinaryInputObject
    updateInterval: 600
  '4':
    name: High Temperature Alert
    type: BinaryInputObject
    updateInterval: 600
  '5':
    name: Button Pressed
    type: BinaryInputObject
    updateInterval: 600
lorawan:
  adrAlgorithm: LoRa Only
  classCDownlinkTimeout: 5
  macVersion: LORAWAN_1_0_3
  region: AS923
  regionalParametersRevision: A
  supportClassB: false
  supportClassC: false
  supportOTAA: true
model: Senso8-LRS20200
profileVersion: 1.0.0
